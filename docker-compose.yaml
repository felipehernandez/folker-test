version: '3.1'

services:
  mockserver:
    image: mockserver/mockserver:latest
    ports:
      - 1080:1080

  gcp-pubsub-emulator:
    image: messagebird/gcloud-pubsub-emulator:latest
    ports:
      - 8681:8681
    environment:
      PUBSUB_PROJECT1: "folker-test-gcp-test,a_topic:a_subscription"

  gcp-datastore-emulator:
    image: singularities/datastore-emulator
    ports:
      - 8684:8684
    environment:
      DATASTORE_PROJECT_ID: folker-test-gcp-test
      DATASTORE_LISTEN_ADDRESS: 0.0.0.0:8684

  grpc-test-server:
    image: folkertest/grpc-test-server:latest
    ports:
      - 8682:8682

  graphql-test-server:
    image: folkertest/graphql-test-server:latest
    ports:
      - 8683:8683

  postgres-server:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker

  zookeeper:
    image: docker.io/bitnami/zookeeper:3
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092,INTEGRATION://integration-tests-kafka:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,INTEGRATION:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092,INTEGRATION://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic_test:1:1"
    depends_on:
      - zookeeper
  kafka2:
    image: docker.io/bitnami/kafka:3
    ports:
      - 9092:9092
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic_test:1:1"
    depends_on:
      - zookeeper

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_VHOST: test
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./.circleci/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./.circleci/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json

  integration-tests-template:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t template -n 3 --trace
    depends_on:
      - mockserver
  integration-tests-profile:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -p test-profile -t profile -n 1 --trace
  integration-tests-parallel:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t parallel -n 3 --trace
  integration-tests-conditional:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t conditional -n 1 --trace
  integration-tests-foreach:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t foreach -n 1 --trace
  integration-tests-save:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t save -n 2 --trace
  integration-tests-void:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t void -n 3 --trace
  integration-tests-print:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t print -n 2 --trace
  integration-tests-wait:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t wait -n 1 --trace
  integration-tests-rest:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t rest -n 3 --trace
    depends_on:
      - mockserver
  integration-tests-postgres:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t postgres -n 1 --trace
    depends_on:
      - postgres-server
  integration-tests-file:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t file -n 1 --trace
  integration-tests-code:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t code -n 1 --trace
  integration-tests-gmail:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t gmail -n 1 --trace
  integration-tests-protobuf:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t protobuf -n 2 --trace
    depends_on:
      - mockserver
  integration-tests-grpc:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t grpc -n 1 --trace
    depends_on:
      - grpc-test-server
  integration-tests-graphql:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t graphql -n 1 --trace
    depends_on:
      - graphql-test-server
  integration-tests-pubsub:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t pubsub -n 1 --trace
    depends_on:
      - gcp-pubsub-emulator
  integration-tests-datastore:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t datastore -n 4 --trace
    depends_on:
      - gcp-datastore-emulator
  integration-tests-kafka:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t kafka -n 1 --trace
    depends_on:
      - kafka
  integration-tests-zookeeper:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t zookeeper -n 4 --trace
    depends_on:
      - zookeeper
  integration-tests-rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile-integration
    command: -t rabbitmq -n 2 --trace
    depends_on:
      - rabbitmq
