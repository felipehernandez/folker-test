version: 2.1

orbs:
  python: circleci/python@1.4.0

executors:
  docker-builder:
    docker:
      - image: circleci/buildpack-deps:stretch
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pkg-manager: pip
          pip-dependency-file: requirements.txt
      - run:
          name: Test
          command: |
            coverage run -m pytest --junitxml codecoverage/unittests.xml
            coverage report -m
            coverage xml -o codecoverage/coverage.xml
            coverage html
      - store_test_results:
          path: codecoverage
      - store_artifacts:
          path: codecoverage
      - persist_to_workspace:
          root: .
          paths:
            - ./

  build-docker-image:
    executor: docker-builder
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t folkertest:1.1.<<pipeline.number>> .
      - run:
          name: Archive Docker image
          command: docker save -o folkertest.tar folkertest
      - persist_to_workspace:
          root: .
          paths:
            - ./folkertest.tar

  integration-tests:
    machine: true # Linux VM instead of docker environment
    steps:
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
      - attach_workspace:
          at: .
      - run: docker-compose up --detach mockserver
      - run: docker-compose up --detach gcp-pubsub-emulator
      - run: docker-compose up --detach gcp-datastore-emulator
      - run: docker-compose up --detach grpc-test-server
      - run: docker-compose up --detach graphql-test-server
      - run: docker-compose up --detach postgres-server

      - run: docker-compose up integration-test1
      - run: docker-compose up integration-test2
      - run: docker-compose up integration-test3

      - run: docker-compose down mockserver
      - run: docker-compose down gcp-pubsub-emulator
      - run: docker-compose down gcp-datastore-emulator
      - run: docker-compose down grpc-test-server
      - run: docker-compose down graphql-test-server
      - run: docker-compose down postgres-server

  integration-tests2:
    machine: true # Linux VM instead of docker environment
    steps:
      - run:
          name: Create network
          command: |
            docker network create integration-test-network
      - run:
          name: startup mockserver
          command: |
            docker run --network integration-test-network \
            -d \
            --name mockserver \
            mockserver/mockserver:latest
      - run:
          name: Run int tests
          command: |
            echo "integration tests"
      - run:
          name: Terminate mockserver
          command: docker stop mockserver
      - run:
          name: Terminate network
          command: docker network rm integration-test-network

workflows:
  main:
    jobs:
      - build
      - build-docker-image:
          requires:
            - build
      - integration-tests:
          requires:
            - build
            - build-docker-image
