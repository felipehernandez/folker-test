version: 2.1

orbs:
  python: circleci/python@1.4.0

executors:
  docker-builder:
    docker:
      - image: circleci/buildpack-deps:stretch
  integration-test-runner:
    machine: true # Linux VM instead of docker environment
  docker-publisher:
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
      - python/install-packages:
          pkg-manager: pip
          pip-dependency-file: requirements.txt
      - run:
          name: Test
          command: |
            coverage run -m pytest --junitxml codecoverage/unittests.xml
            coverage report -m
            coverage xml -o codecoverage/coverage.xml
            coverage html
      - store_test_results:
          path: codecoverage
      - store_artifacts:
          path: codecoverage
      - persist_to_workspace:
          root: .
          paths:
            - ./

  setup-integration-tests:
    executor: integration-test-runner
    steps:
      - attach_workspace:
          at: .
      - run: docker-compose up -d mockserver
      - run: docker-compose up -d gcp-pubsub-emulator
      - run: docker-compose up -d gcp-datastore-emulator
      - run: docker-compose up -d grpc-test-server
      - run: docker-compose up -d graphql-test-server
      - run: docker-compose up -d postgres-server
      - run: docker-compose up -d kafka

  run-integration-tests:
    executor: integration-test-runner
    parameters:
      tests:
        type: string
    steps:
      - attach_workspace:
          at: .
      - run: docker-compose up integration-tests-<<parameters.tests>>

  validate-integration-tests:
    executor: integration-test-runner
    steps:
      - run: echo "Integration tests validated"

  build-docker-image:
    executor: docker-builder
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build \
              -t folkertest/folkertest:1.2.<<pipeline.number>> \
              -t folkertest/folkertest:beta \
              -t folkertest/folkertest:latest \
              .
      - run:
          name: Archive Docker image
          command: docker save -o folkertest.tar folkertest/folkertest
      - persist_to_workspace:
          root: .
          paths:
            - ./folkertest.tar

  publish-docker-image:
    executor: docker-builder
    parameters:
      image-label:
        type: string
        default: beta
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load Docker image
          command: docker load -i ./folkertest.tar
      - run:
          name: Login Dockerhub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Publish docker image as 1.2.<<pipeline.number>>
          command: |
            docker push folkertest/folkertest:1.2.<<pipeline.number>>
      - run:
          name: Publish docker image as <<parameters.image-label>>
          command: |
            docker push folkertest/folkertest:<<parameters.image-label>>

workflows:
  version: 2.1

  development:
    when:
      and:
        - not:
            equal: [ beta, << pipeline.git.branch >> ]
        - not:
            equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - build
      - setup-integration-tests:
          requires:
            - build
      - run-integration-tests:
          matrix:
            parameters:
              tests:
                - profile
                - template
                - profile
                - parallel
                - conditional
                - foreach
                - save
                - void
                - print
                - wait
                - rest
                - postgres
                - file
                - code
                - gmail
                - protobuf
                - grpc
                - graphql
                - kafka
                - zookeeper
          requires:
            - setup-integration-tests
      - validate-integration-tests:
          requires:
            - run-integration-tests
  beta:
    when:
      equal: [ beta, << pipeline.git.branch >> ]
    jobs:
      - build
      - setup-integration-tests:
          requires:
            - build
      - run-integration-tests:
          matrix:
            parameters:
              tests:
                - profile
                - template
                - profile
                - parallel
                - conditional
                - foreach
                - save
                - void
                - print
                - wait
                - rest
                - postgres
                - file
                - code
                - gmail
                - protobuf
                - grpc
                - graphql
                - kafka
          requires:
            - setup-integration-tests
      - validate-integration-tests:
          requires:
            - run-integration-tests
      - build-docker-image:
          requires:
            - build
            - validate-integration-tests
      - publish-docker-image:
          name: publich-beta
          image-label: beta
          requires:
            - build-docker-image

  main:
    when:
      equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - build
      - setup-integration-tests:
          requires:
            - build
      - run-integration-tests:
          matrix:
            parameters:
              tests:
                - profile
                - template
                - profile
                - parallel
                - conditional
                - foreach
                - save
                - void
                - print
                - wait
                - rest
                - postgres
                - file
                - code
                - gmail
                - protobuf
                - grpc
                - graphql
                - kafka
          requires:
            - setup-integration-tests
      - validate-integration-tests:
          requires:
            - run-integration-tests
      - build-docker-image:
          requires:
            - build
            - validate-integration-tests
      - publish-docker-image:
          name: publich-latest
          image-label: latest
          requires:
            - build-docker-image

